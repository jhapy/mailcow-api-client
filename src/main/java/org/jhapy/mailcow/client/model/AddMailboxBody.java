/*
 * mailcow API
 * mailcow is complete e-mailing solution with advanced antispam, antivirus, nice UI and API.  In order to use this API you have to create a API key and add your IP address to the whitelist of allowed IPs this can be done by logging into the Mailcow UI using your admin account, then go to Configuration > Access > Edit administrator details > API. There you will find a collapsed API menu.  There are two types of API keys   - The read only key can only be used for all get endpoints   - The read write key can be used for all endpoints
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.jhapy.mailcow.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
/**
 * AddMailboxBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-23T22:25:19.320233+01:00[Africa/Casablanca]")
public class AddMailboxBody {
  @JsonProperty("active")
  private Boolean active = null;

  @JsonProperty("domain")
  private String domain = null;

  @JsonProperty("local_part")
  private String localPart = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("password2")
  private String password2 = null;

  @JsonProperty("password")
  private String password = null;

  @JsonProperty("quota")
  private BigDecimal quota = null;

  @JsonProperty("force_pw_update")
  private Boolean forcePwUpdate = null;

  @JsonProperty("tls_enforce_in")
  private Boolean tlsEnforceIn = null;

  @JsonProperty("tls_enforce_out")
  private Boolean tlsEnforceOut = null;

  public AddMailboxBody active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * is mailbox active or not
   * @return active
  **/
  @Schema(description = "is mailbox active or not")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public AddMailboxBody domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * domain name
   * @return domain
  **/
  @Schema(description = "domain name")
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }

  public AddMailboxBody localPart(String localPart) {
    this.localPart = localPart;
    return this;
  }

   /**
   * left part of email address
   * @return localPart
  **/
  @Schema(description = "left part of email address")
  public String getLocalPart() {
    return localPart;
  }

  public void setLocalPart(String localPart) {
    this.localPart = localPart;
  }

  public AddMailboxBody name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Full name of the mailbox user
   * @return name
  **/
  @Schema(description = "Full name of the mailbox user")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AddMailboxBody password2(String password2) {
    this.password2 = password2;
    return this;
  }

   /**
   * mailbox password for confirmation
   * @return password2
  **/
  @Schema(description = "mailbox password for confirmation")
  public String getPassword2() {
    return password2;
  }

  public void setPassword2(String password2) {
    this.password2 = password2;
  }

  public AddMailboxBody password(String password) {
    this.password = password;
    return this;
  }

   /**
   * mailbox password
   * @return password
  **/
  @Schema(description = "mailbox password")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public AddMailboxBody quota(BigDecimal quota) {
    this.quota = quota;
    return this;
  }

   /**
   * mailbox quota
   * @return quota
  **/
  @Schema(description = "mailbox quota")
  public BigDecimal getQuota() {
    return quota;
  }

  public void setQuota(BigDecimal quota) {
    this.quota = quota;
  }

  public AddMailboxBody forcePwUpdate(Boolean forcePwUpdate) {
    this.forcePwUpdate = forcePwUpdate;
    return this;
  }

   /**
   * forces the user to update its password on first login
   * @return forcePwUpdate
  **/
  @Schema(description = "forces the user to update its password on first login")
  public Boolean isForcePwUpdate() {
    return forcePwUpdate;
  }

  public void setForcePwUpdate(Boolean forcePwUpdate) {
    this.forcePwUpdate = forcePwUpdate;
  }

  public AddMailboxBody tlsEnforceIn(Boolean tlsEnforceIn) {
    this.tlsEnforceIn = tlsEnforceIn;
    return this;
  }

   /**
   * force inbound email tls encryption
   * @return tlsEnforceIn
  **/
  @Schema(description = "force inbound email tls encryption")
  public Boolean isTlsEnforceIn() {
    return tlsEnforceIn;
  }

  public void setTlsEnforceIn(Boolean tlsEnforceIn) {
    this.tlsEnforceIn = tlsEnforceIn;
  }

  public AddMailboxBody tlsEnforceOut(Boolean tlsEnforceOut) {
    this.tlsEnforceOut = tlsEnforceOut;
    return this;
  }

   /**
   * force oubound tmail tls encryption
   * @return tlsEnforceOut
  **/
  @Schema(description = "force oubound tmail tls encryption")
  public Boolean isTlsEnforceOut() {
    return tlsEnforceOut;
  }

  public void setTlsEnforceOut(Boolean tlsEnforceOut) {
    this.tlsEnforceOut = tlsEnforceOut;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddMailboxBody addMailboxBody = (AddMailboxBody) o;
    return Objects.equals(this.active, addMailboxBody.active) &&
        Objects.equals(this.domain, addMailboxBody.domain) &&
        Objects.equals(this.localPart, addMailboxBody.localPart) &&
        Objects.equals(this.name, addMailboxBody.name) &&
        Objects.equals(this.password2, addMailboxBody.password2) &&
        Objects.equals(this.password, addMailboxBody.password) &&
        Objects.equals(this.quota, addMailboxBody.quota) &&
        Objects.equals(this.forcePwUpdate, addMailboxBody.forcePwUpdate) &&
        Objects.equals(this.tlsEnforceIn, addMailboxBody.tlsEnforceIn) &&
        Objects.equals(this.tlsEnforceOut, addMailboxBody.tlsEnforceOut);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, domain, localPart, name, password2, password, quota, forcePwUpdate, tlsEnforceIn, tlsEnforceOut);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddMailboxBody {\n");
    
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    localPart: ").append(toIndentedString(localPart)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    password2: ").append(toIndentedString(password2)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    quota: ").append(toIndentedString(quota)).append("\n");
    sb.append("    forcePwUpdate: ").append(toIndentedString(forcePwUpdate)).append("\n");
    sb.append("    tlsEnforceIn: ").append(toIndentedString(tlsEnforceIn)).append("\n");
    sb.append("    tlsEnforceOut: ").append(toIndentedString(tlsEnforceOut)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
