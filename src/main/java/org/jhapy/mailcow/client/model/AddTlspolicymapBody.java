/*
 * mailcow API
 * mailcow is complete e-mailing solution with advanced antispam, antivirus, nice UI and API.  In order to use this API you have to create a API key and add your IP address to the whitelist of allowed IPs this can be done by logging into the Mailcow UI using your admin account, then go to Configuration > Access > Edit administrator details > API. There you will find a collapsed API menu.  There are two types of API keys   - The read only key can only be used for all get endpoints   - The read write key can be used for all endpoints
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.jhapy.mailcow.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
/**
 * AddTlspolicymapBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-23T22:25:19.320233+01:00[Africa/Casablanca]")
public class AddTlspolicymapBody {
  @JsonProperty("parameters")
  private String parameters = null;

  @JsonProperty("active")
  private BigDecimal active = null;

  @JsonProperty("dest")
  private String dest = null;

  /**
   * the policy
   */
  public enum PolicyEnum {
    NONE("none"),
    MAY("may"),
    ENCRYPT("encrypt"),
    DANE("dane"),
    _DANE("'dane"),
    FINGERPRINT("fingerprint"),
    VERIFY("verify"),
    SECURE("secure");

    private String value;

    PolicyEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static PolicyEnum fromValue(String text) {
      for (PolicyEnum b : PolicyEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("policy")
  private PolicyEnum policy = null;

  public AddTlspolicymapBody parameters(String parameters) {
    this.parameters = parameters;
    return this;
  }

   /**
   * custom parameters you find out more about them [here](http://www.postfix.org/postconf.5.html#smtp_tls_policy_maps)
   * @return parameters
  **/
  @Schema(description = "custom parameters you find out more about them [here](http://www.postfix.org/postconf.5.html#smtp_tls_policy_maps)")
  public String getParameters() {
    return parameters;
  }

  public void setParameters(String parameters) {
    this.parameters = parameters;
  }

  public AddTlspolicymapBody active(BigDecimal active) {
    this.active = active;
    return this;
  }

   /**
   * 1 for a active user account 0 for a disabled user account
   * @return active
  **/
  @Schema(description = "1 for a active user account 0 for a disabled user account")
  public BigDecimal getActive() {
    return active;
  }

  public void setActive(BigDecimal active) {
    this.active = active;
  }

  public AddTlspolicymapBody dest(String dest) {
    this.dest = dest;
    return this;
  }

   /**
   * the target domain or email address
   * @return dest
  **/
  @Schema(description = "the target domain or email address")
  public String getDest() {
    return dest;
  }

  public void setDest(String dest) {
    this.dest = dest;
  }

  public AddTlspolicymapBody policy(PolicyEnum policy) {
    this.policy = policy;
    return this;
  }

   /**
   * the policy
   * @return policy
  **/
  @Schema(description = "the policy")
  public PolicyEnum getPolicy() {
    return policy;
  }

  public void setPolicy(PolicyEnum policy) {
    this.policy = policy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddTlspolicymapBody addTlspolicymapBody = (AddTlspolicymapBody) o;
    return Objects.equals(this.parameters, addTlspolicymapBody.parameters) &&
        Objects.equals(this.active, addTlspolicymapBody.active) &&
        Objects.equals(this.dest, addTlspolicymapBody.dest) &&
        Objects.equals(this.policy, addTlspolicymapBody.policy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(parameters, active, dest, policy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddTlspolicymapBody {\n");
    
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    dest: ").append(toIndentedString(dest)).append("\n");
    sb.append("    policy: ").append(toIndentedString(policy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
