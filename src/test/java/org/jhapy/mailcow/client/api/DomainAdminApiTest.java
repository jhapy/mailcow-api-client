/*
 * mailcow API
 * mailcow is complete e-mailing solution with advanced antispam, antivirus, nice UI and API.  In order to use this API you have to create a API key and add your IP address to the whitelist of allowed IPs this can be done by logging into the Mailcow UI using your admin account, then go to Configuration > Access > Edit administrator details > API. There you will find a collapsed API menu.  There are two types of API keys   - The read only key can only be used for all get endpoints   - The read write key can be used for all endpoints
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.jhapy.mailcow.client.api;

import org.jhapy.mailcow.client.model.AddDomainadminBody;
import org.jhapy.mailcow.client.model.DeleteDomainadminBody;
import org.jhapy.mailcow.client.model.EditDaaclBody;
import org.jhapy.mailcow.client.model.EditDomainadminBody;
import org.jhapy.mailcow.client.model.InlineResponse200;
import org.jhapy.mailcow.client.model.InlineResponse2001;
import org.jhapy.mailcow.client.model.InlineResponse401;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DomainAdminApi
 */
@Ignore
public class DomainAdminApiTest {

    private final DomainAdminApi api = new DomainAdminApi();

    /**
     * Create Domain Admin user
     *
     * Using this endpoint you can create a new Domain Admin user. This user has full control over a domain, and can create new mailboxes and aliases.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createDomainAdminUserTest() {
        AddDomainadminBody body = null;
        InlineResponse200 response = api.createDomainAdminUser(body);

        // TODO: test validations
    }
    /**
     * Delete Domain Admin
     *
     * Using this endpoint a existing Domain Admin user can be deleted.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDomainAdminTest() {
        DeleteDomainadminBody body = null;
        InlineResponse200 response = api.deleteDomainAdmin(body);

        // TODO: test validations
    }
    /**
     * Edit Domain Admin ACL
     *
     * Using this endpoint you can edit the ACLs of a Domain Admin user. This user has full control over a domain, and can create new mailboxes and aliases.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void editDomainAdminACLTest() {
        EditDaaclBody body = null;
        InlineResponse200 response = api.editDomainAdminACL(body);

        // TODO: test validations
    }
    /**
     * Edit Domain Admin user
     *
     * Using this endpoint you can edit a existing Domain Admin user. This user has full control over a domain, and can create new mailboxes and aliases.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void editDomainAdminUserTest() {
        EditDomainadminBody body = null;
        InlineResponse2001 response = api.editDomainAdminUser(body);

        // TODO: test validations
    }
    /**
     * Get Domain Admins
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDomainAdminsTest() {
        api.getDomainAdmins();

        // TODO: test validations
    }
}
