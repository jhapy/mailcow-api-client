/*
 * mailcow API
 * mailcow is complete e-mailing solution with advanced antispam, antivirus, nice UI and API.  In order to use this API you have to create a API key and add your IP address to the whitelist of allowed IPs this can be done by logging into the Mailcow UI using your admin account, then go to Configuration > Access > Edit administrator details > API. There you will find a collapsed API menu.  There are two types of API keys   - The read only key can only be used for all get endpoints   - The read write key can be used for all endpoints
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.jhapy.mailcow.client.api;

import org.jhapy.mailcow.client.model.AddDomainBody;
import org.jhapy.mailcow.client.model.DefaultMethodResponse;
import org.jhapy.mailcow.client.model.DeleteDomainBody;
import org.jhapy.mailcow.client.model.EditDomainBody;
import org.jhapy.mailcow.client.model.InlineResponse200;
import org.jhapy.mailcow.client.model.InlineResponse401;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DomainsApi
 */
@Ignore
public class DomainsApiTest {

    private final DomainsApi api = new DomainsApi();

    /**
     * Create domain
     *
     * You may create your own domain using this action. It takes a JSON object containing a domain informations.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createDomainTest() {
        AddDomainBody body = null;
        List<DefaultMethodResponse> response = api.createDomain(body);

        // TODO: test validations
    }
    /**
     * Delete domain
     *
     * You can delete one or more domains.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDomainTest() {
        DeleteDomainBody body = null;
        InlineResponse200 response = api.deleteDomain(body);

        // TODO: test validations
    }
    /**
     * Get domains
     *
     * You can list all domains existing in system.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDomainsTest() {
        String id = null;
        String xAPIKey = null;
        api.getDomains(id, xAPIKey);

        // TODO: test validations
    }
    /**
     * Update domain
     *
     * You can update one or more domains per request. You can also send just attributes you want to change. Example: You can add domain names to items list and in attr object just include &#x60;\&quot;active\&quot;: \&quot;0\&quot;&#x60; to deactivate domains.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateDomainTest() {
        EditDomainBody body = null;
        InlineResponse200 response = api.updateDomain(body);

        // TODO: test validations
    }
}
