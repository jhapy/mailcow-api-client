/*
 * mailcow API
 * mailcow is complete e-mailing solution with advanced antispam, antivirus, nice UI and API.  In order to use this API you have to create a API key and add your IP address to the whitelist of allowed IPs this can be done by logging into the Mailcow UI using your admin account, then go to Configuration > Access > Edit administrator details > API. There you will find a collapsed API menu.  There are two types of API keys   - The read only key can only be used for all get endpoints   - The read write key can be used for all endpoints
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.jhapy.mailcow.client.api;

import org.jhapy.mailcow.client.model.AddApppasswdBody;
import org.jhapy.mailcow.client.model.DeleteApppasswdBody;
import org.jhapy.mailcow.client.model.InlineResponse200;
import org.jhapy.mailcow.client.model.InlineResponse401;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AppPasswordsApi
 */
@Ignore
public class AppPasswordsApiTest {

    private final AppPasswordsApi api = new AppPasswordsApi();

    /**
     * Create App Password
     *
     * Using this endpoint you can create a new app password for a specific mailbox.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAppPasswordTest() {
        AddApppasswdBody body = null;
        InlineResponse200 response = api.createAppPassword(body);

        // TODO: test validations
    }
    /**
     * Delete App Password
     *
     * Using this endpoint you can delete a single app password.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAppPasswordTest() {
        DeleteApppasswdBody body = null;
        InlineResponse200 response = api.deleteAppPassword(body);

        // TODO: test validations
    }
    /**
     * Get App Password
     *
     * Using this endpoint you can get all app passwords from a specific mailbox.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppPasswordTest() {
        String mailbox = null;
        String xAPIKey = null;
        api.getAppPassword(mailbox, xAPIKey);

        // TODO: test validations
    }
}
