/*
 * mailcow API
 * mailcow is complete e-mailing solution with advanced antispam, antivirus, nice UI and API.  In order to use this API you have to create a API key and add your IP address to the whitelist of allowed IPs this can be done by logging into the Mailcow UI using your admin account, then go to Configuration > Access > Edit administrator details > API. There you will find a collapsed API menu.  There are two types of API keys   - The read only key can only be used for all get endpoints   - The read write key can be used for all endpoints
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.jhapy.mailcow.client.api;

import org.jhapy.mailcow.client.model.AddDomainpolicyBody;
import org.jhapy.mailcow.client.model.DeleteDomainpolicyBody;
import org.jhapy.mailcow.client.model.InlineResponse200;
import org.jhapy.mailcow.client.model.InlineResponse401;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DomainAntispamPoliciesApi
 */
@Ignore
public class DomainAntispamPoliciesApiTest {

    private final DomainAntispamPoliciesApi api = new DomainAntispamPoliciesApi();

    /**
     * Create domain policy
     *
     * You may create your own domain policy using this action. It takes a JSON object containing a domain informations.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createDomainPolicyTest() {
        AddDomainpolicyBody body = null;
        InlineResponse200 response = api.createDomainPolicy(body);

        // TODO: test validations
    }
    /**
     * Delete domain policy
     *
     * You can delete one o more domain policies.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDomainPolicyTest() {
        DeleteDomainpolicyBody body = null;
        InlineResponse200 response = api.deleteDomainPolicy(body);

        // TODO: test validations
    }
    /**
     * List blacklist domain policy
     *
     * You can list all blacklist policies per domain.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listBlacklistDomainPolicyTest() {
        String domain = null;
        String xAPIKey = null;
        api.listBlacklistDomainPolicy(domain, xAPIKey);

        // TODO: test validations
    }
    /**
     * List whitelist domain policy
     *
     * You can list all whitelist policies per domain.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listWhitelistDomainPolicyTest() {
        String domain = null;
        String xAPIKey = null;
        api.listWhitelistDomainPolicy(domain, xAPIKey);

        // TODO: test validations
    }
}
